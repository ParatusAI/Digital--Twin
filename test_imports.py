#!/usr/bin/env python3
"""
Test script to check all imports and identify missing dependencies
"""

import sys
import warnings

print("üîç Testing imports for enhanced training pipeline...")
print(f"Python version: {sys.version}")
print(f"Python path: {sys.path}")

# Test basic scientific packages
try:
    import numpy as np
    print("‚úÖ NumPy imported successfully")
except ImportError as e:
    print(f"‚ùå NumPy import failed: {e}")

try:
    import pandas as pd
    print("‚úÖ Pandas imported successfully")
except ImportError as e:
    print(f"‚ùå Pandas import failed: {e}")

try:
    import matplotlib.pyplot as plt
    print("‚úÖ Matplotlib imported successfully")
except ImportError as e:
    print(f"‚ùå Matplotlib import failed: {e}")

try:
    from sklearn.preprocessing import StandardScaler
    print("‚úÖ Scikit-learn imported successfully")
except ImportError as e:
    print(f"‚ùå Scikit-learn import failed: {e}")

# Test our custom modules
print("\nüß™ Testing custom module imports...")

try:
    from generate_sample_data import generate_sample_batch, load_config
    print("‚úÖ generate_sample_data imported successfully")
except ImportError as e:
    print(f"‚ùå generate_sample_data import failed: {e}")

try:
    from ml_optimization import BayesianOptimizer, create_optimization_strategy
    print("‚úÖ ml_optimization imported successfully")
except ImportError as e:
    print(f"‚ùå ml_optimization import failed: {e}")

try:
    from adaptive_sampling import create_adaptive_sampling_strategy
    print("‚úÖ adaptive_sampling imported successfully")
except ImportError as e:
    print(f"‚ùå adaptive_sampling import failed: {e}")

try:
    from monitoring import RealTimeMonitor, StructuredLogger
    print("‚úÖ monitoring imported successfully")
except ImportError as e:
    print(f"‚ùå monitoring import failed: {e}")

try:
    from gpu_acceleration import GPUDataGenerator, GPUCapabilities
    print("‚úÖ gpu_acceleration imported successfully")
except ImportError as e:
    print(f"‚ùå gpu_acceleration import failed: {e}")

try:
    from advanced_physics import PhysicsModelSuite
    print("‚úÖ advanced_physics imported successfully")
except ImportError as e:
    print(f"‚ùå advanced_physics import failed: {e}")

try:
    from data_versioning import DataVersionManager
    print("‚úÖ data_versioning imported successfully")
except ImportError as e:
    print(f"‚ùå data_versioning import failed: {e}")

try:
    from experimental_integration import ExperimentalDataManager, ModelCalibrator
    print("‚úÖ experimental_integration imported successfully")
except ImportError as e:
    print(f"‚ùå experimental_integration import failed: {e}")

print("\n‚úÖ Import testing complete!")